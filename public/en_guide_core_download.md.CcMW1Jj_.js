import{_ as t}from"./chunks/文件下载时序图.Dr1oZu96.js";import{_ as r,f as a,o,b1 as s}from"./chunks/framework.CfD84-nl.js";const u=JSON.parse('{"title":"Download","description":"","frontmatter":{},"headers":[],"relativePath":"en/guide/core/download.md","filePath":"en/guide/core/download.md"}'),i={name:"en/guide/core/download.md"};function d(n,e,l,h,c,p){return o(),a("div",null,e[0]||(e[0]=[s('<h1 id="download" tabindex="-1">Download <a class="header-anchor" href="#download" aria-label="Permalink to &quot;Download&quot;">​</a></h1><p><img src="'+t+'" alt="File Download Logic Sequence Diagram"></p><p>The browser initiates a file read request to the server. The server retrieves the file metadata based on the <code>fileKey</code> parameter.</p><p>After obtaining the file metadata, it determines whether the user has file read permissions based on the &quot;private&quot; field and &quot;owner&quot; field in the metadata.</p><ul><li>If the user has read permissions, the server requests the MinIO server for a pre-signed file access URL and returns it to the browser.</li><li>If the user does not have read permissions, the server returns an access denied message to the browser.</li></ul><p>Once the browser receives the real file URL, it reads the file and either displays or downloads it.</p>',6)]))}const _=r(i,[["render",d]]);export{u as __pageData,_ as default};
