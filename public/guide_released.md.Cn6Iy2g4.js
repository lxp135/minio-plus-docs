import{_ as a,c as e,o as l,aS as i}from"./chunks/framework.4okfb48a.js";const p=JSON.parse('{"title":"更新日志","description":"","frontmatter":{},"headers":[],"relativePath":"guide/released.md","filePath":"guide/released.md"}'),o={name:"guide/released.md"},r=i('<h1 id="更新日志" tabindex="-1">更新日志 <a class="header-anchor" href="#更新日志" aria-label="Permalink to &quot;更新日志&quot;">​</a></h1><h2 id="v1-0-0-2024-08-02" tabindex="-1">v1.0.0 (2024-08-02) <a class="header-anchor" href="#v1-0-0-2024-08-02" aria-label="Permalink to &quot;v1.0.0 (2024-08-02)&quot;">​</a></h2><h3 id="bug修正" tabindex="-1">BUG修正 <a class="header-anchor" href="#bug修正" aria-label="Permalink to &quot;BUG修正&quot;">​</a></h3><ul><li>修正不合规的 javadoc 。</li></ul><h3 id="新特性" tabindex="-1">新特性 <a class="header-anchor" href="#新特性" aria-label="Permalink to &quot;新特性&quot;">​</a></h3><ul><li>1.0.0 正式版发布。</li><li>SpringBoot3 Starter 发布。</li><li>调整包结构，以 SpringBoot3 为主干，同时支持 SpringBoot2 和 SpringBoot3。</li><li>使用 OpenAPI3 规范重写类、方法、属性注解。</li></ul><h3 id="依赖升级" tabindex="-1">依赖升级 <a class="header-anchor" href="#依赖升级" aria-label="Permalink to &quot;依赖升级&quot;">​</a></h3><ul><li><code>knife4j</code> 版本从 2.0.9 升级到 4.4.0。</li><li><code>maven-javadoc-plugin</code> 版本从 2.9.1 升级到 3.8.0。</li></ul><h2 id="v0-1-4-2024-07-29" tabindex="-1">v0.1.4 (2024-07-29) <a class="header-anchor" href="#v0-1-4-2024-07-29" aria-label="Permalink to &quot;v0.1.4 (2024-07-29)&quot;">​</a></h2><h3 id="bug修正-1" tabindex="-1">BUG修正 <a class="header-anchor" href="#bug修正-1" aria-label="Permalink to &quot;BUG修正&quot;">​</a></h3><ul><li>解决在 MinIO 查询分片信息失败时，报空指针问题。</li><li>解决在 sonarqube 中扫描出的代码问题。</li></ul><h3 id="新特性-1" tabindex="-1">新特性 <a class="header-anchor" href="#新特性-1" aria-label="Permalink to &quot;新特性&quot;">​</a></h3><ul><li>引入 sonarqube 进行代码扫描。</li><li>修改文件预览接口，当文件为图片时返回图片的缩略图，当文件不是图片时返回文件类型图标。</li><li>演示工程，传入空的用户信息默认为访客。</li><li>演示工程，数据库配置项使用环境变量。</li></ul><h3 id="依赖升级-1" tabindex="-1">依赖升级 <a class="header-anchor" href="#依赖升级-1" aria-label="Permalink to &quot;依赖升级&quot;">​</a></h3><ul><li><code>minio</code> 版本从 8.3.3 升级到 8.5.11。</li><li><code>spring-boot-dependencies</code> 版本从 2.6.11 升级到 2.7.18。</li></ul><h2 id="v0-1-3-2024-07-15" tabindex="-1">v0.1.3 (2024-07-15) <a class="header-anchor" href="#v0-1-3-2024-07-15" aria-label="Permalink to &quot;v0.1.3 (2024-07-15)&quot;">​</a></h2><h3 id="bug修正-2" tabindex="-1">BUG修正 <a class="header-anchor" href="#bug修正-2" aria-label="Permalink to &quot;BUG修正&quot;">​</a></h3><ul><li>解决 upload.html 测试页面大文件上传时，前端计算MD5值卡死问题。</li><li>后端调用 StorageService.createFile 方法时，同一用户上传相同文件可以正常生成不同的 fileKey 了。</li></ul><h3 id="新特性-2" tabindex="-1">新特性 <a class="header-anchor" href="#新特性-2" aria-label="Permalink to &quot;新特性&quot;">​</a></h3><ul><li>StorageService 类添加 createBigFile 大文件上传接口。</li></ul><h2 id="v0-1-2-2024-06-18" tabindex="-1">v0.1.2 (2024-06-18) <a class="header-anchor" href="#v0-1-2-2024-06-18" aria-label="Permalink to &quot;v0.1.2 (2024-06-18)&quot;">​</a></h2><h3 id="bug修正-3" tabindex="-1">BUG修正 <a class="header-anchor" href="#bug修正-3" aria-label="Permalink to &quot;BUG修正&quot;">​</a></h3><p>无</p><h3 id="新特性-3" tabindex="-1">新特性 <a class="header-anchor" href="#新特性-3" aria-label="Permalink to &quot;新特性&quot;">​</a></h3><ul><li>增加发布模块<code>minio-plus-core-spring-boot-starter</code>，该模块仅发布 Service 层接口不发布 Controller 。</li><li>增加演示模块<code>minio-plus-application-schedule</code>，该模块使用<code>minio-plus-core-spring-boot-starter</code>实现了一个定期清理文件的策略。</li><li>删除原有图片上传逻辑，使用懒加载策略，在第一次访问预览图时生成。</li></ul><h2 id="v0-1-1-2024-06-12" tabindex="-1">v0.1.1 (2024-06-12) <a class="header-anchor" href="#v0-1-1-2024-06-12" aria-label="Permalink to &quot;v0.1.1 (2024-06-12)&quot;">​</a></h2><h3 id="bug修正-4" tabindex="-1">BUG修正 <a class="header-anchor" href="#bug修正-4" aria-label="Permalink to &quot;BUG修正&quot;">​</a></h3><ul><li>删除未使用的依赖<code>spring-cloud-dependencies</code>和<code>spring-cloud-alibaba-dependencies</code></li></ul><h3 id="新特性-4" tabindex="-1">新特性 <a class="header-anchor" href="#新特性-4" aria-label="Permalink to &quot;新特性&quot;">​</a></h3><ul><li>minio-plus-extension 加入UserHolder 来存取登录用户编号，演示工程中增加拦截器实现登录用户逻辑。</li><li>调整发布逻辑，配置发布忽略<code>minio-plus-application</code>和<code>minio-plus-application-mysql</code></li></ul><h3 id="依赖升级-2" tabindex="-1">依赖升级 <a class="header-anchor" href="#依赖升级-2" aria-label="Permalink to &quot;依赖升级&quot;">​</a></h3><ul><li>升级<code>mybatisplus</code> 3.5.3.1 -&gt; 3.5.7</li><li>升级<code>lombok</code> 1.18.24 -&gt; 1.18.32</li><li>升级<code>thumbnailator</code> 0.4.8 -&gt; 0.4.20</li><li>升级<code>hutool</code> 5.8.15 -&gt; 5.8.28</li></ul><h2 id="v0-1-0-2024-06-11" tabindex="-1">v0.1.0 (2024-06-11) <a class="header-anchor" href="#v0-1-0-2024-06-11" aria-label="Permalink to &quot;v0.1.0 (2024-06-11)&quot;">​</a></h2><p>第一个预览版本发布，该版本实现了基本的上传、预览、下载等功能。</p><h3 id="bug修正-5" tabindex="-1">BUG修正 <a class="header-anchor" href="#bug修正-5" aria-label="Permalink to &quot;BUG修正&quot;">​</a></h3><p>无</p><h3 id="新特性-5" tabindex="-1">新特性 <a class="header-anchor" href="#新特性-5" aria-label="Permalink to &quot;新特性&quot;">​</a></h3><ul><li>上传逻辑实现，包含秒传、分片上传、断点续传。</li><li>下载逻辑实现，包含图片预览、文件下载。</li><li>缩略图逻辑实现，在上传图片时自动生成缩略图。</li><li>桶策略，根据文件类型自动创建桶。</li><li>文件元数据，提供了基于MySQL的文件元数据实现。</li></ul>',38),t=[r];function d(h,n,c,u,s,b){return l(),e("div",null,t)}const m=a(o,[["render",d]]);export{p as __pageData,m as default};
