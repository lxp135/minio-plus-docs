import{_ as e}from"./chunks/模块划分.At1HlSSE.js";import{_ as i,c as t,o,aS as n}from"./chunks/framework.C0MmE8CG.js";const _=JSON.parse('{"title":"Code Structure","description":"","frontmatter":{},"headers":[],"relativePath":"en/guide/developers/framework.md","filePath":"en/guide/developers/framework.md"}'),a={name:"en/guide/developers/framework.md"},s=n('<h1 id="code-structure" tabindex="-1">Code Structure <a class="header-anchor" href="#code-structure" aria-label="Permalink to &quot;Code Structure&quot;">​</a></h1><p>The project is positioned as a Java language SDK for MinIO, not as a standalone deployment service, and supports automatic assembly with Spring Boot. Users are responsible for implementing the data storage part, with the project providing a default MySQL implementation.</p><h2 id="module-division" tabindex="-1">Module Division <a class="header-anchor" href="#module-division" aria-label="Permalink to &quot;Module Division&quot;">​</a></h2><p><img src="'+e+'" alt="模块划分"></p><ul><li><strong>minio-plus-api</strong>: The interface definitions for the capabilities provided externally by MinIO Plus, can be understood as the Service layer interface definitions.</li><li><strong>minio-plus-core</strong>: The core business logic package, can be understood as the implementation of the interfaces in the minio-plus-api package.</li><li><strong>minio-plus-extension</strong>: The extension package, encapsulates Controller-related interfaces, can be understood as the Controller layer encapsulation of the interfaces in the minio-plus-api package, helping the project to be used out-of-the-box.</li><li><strong>minio-plus-common</strong>: Utility and configuration classes package.</li><li><strong>minio-s3-api</strong><ul><li><strong>minio-s3-api-definition</strong>: Interface definitions for the S3 specification used by MinIO Plus.</li><li><strong>minio-s3-api-official</strong>: Native SDK implementation.</li><li><strong>minio-s3-api-custom</strong>: Self-implemented.</li></ul></li><li><strong>minio-plus-spring-boot-starter</strong><ul><li><strong>minio-plus-all-spring-boot-starter</strong>: Includes core, extension, common, and api.</li><li><strong>minio-plus-core-spring-boot-starter</strong>: Includes core, common, and api.</li></ul></li><li><strong>minio-plus-application</strong><ul><li><strong>minio-plus-application-official</strong>: Example project using the native MinIO SDK and metadata with MySQL database.</li><li><strong>minio-plus-application-custom</strong>: Example project using self-implemented S3 specification and data with MySQL database.</li></ul></li></ul>',5),r=[s];function l(p,c,d,u,m,g){return o(),t("div",null,r)}const b=i(a,[["render",l]]);export{_ as __pageData,b as default};
